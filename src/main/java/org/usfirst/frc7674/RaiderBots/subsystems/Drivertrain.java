// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc7674.RaiderBots.subsystems;


import org.usfirst.frc7674.RaiderBots.Robot;
import org.usfirst.frc7674.RaiderBots.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;

import com.ctre.phoenix.motorcontrol.can.VictorSPX;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;


// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Drivertrain extends Subsystem {
    private WPI_VictorSPX leftLead;
    private WPI_VictorSPX rightLead;
    private WPI_VictorSPX leftFollow;
    private WPI_VictorSPX rightFollow;
    private DifferentialDrive drivetrain;


    public Drivertrain() {
        leftLead = new WPI_VictorSPX(3);
        leftFollow = new WPI_VictorSPX(4);
        leftFollow.follow(leftLead);
        
        rightLead = new WPI_VictorSPX(1);
        rightFollow = new WPI_VictorSPX(2);
        rightFollow.follow(rightLead);
        
        
        drivetrain = new DifferentialDrive(leftLead, rightLead);
        
        drivetrain.setSafetyEnabled(true);
        drivetrain.setExpiration(0.1);
        //drivetrain.setSensitivity(0.5);
        drivetrain.setMaxOutput(1.0);

        

    }

    @Override
    public void initDefaultCommand() {

        setDefaultCommand(new CommandOne());


        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    public void joyStickDrive(){
        Robot.drivertrain.drivetrain.arcadeDrive(- Robot.oi.driverController.leftStick.getY(), Robot.oi.driverController.rightStick.getX());
    }
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

